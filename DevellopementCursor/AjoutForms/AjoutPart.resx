<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="searchpart.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QFGRXhpZgAATU0AKgAAAAgABgEaAAUAAAABAAAAVgEbAAUAAAAB
        AAAAXgEoAAMAAAABAAIAAAITAAMAAAABAAEAAIKYAAIAAAAeAAAAZpybAAEAAAC6AAAAhAAAAAAAAABI
        AAAAAQAAAEgAAAABKGMpIEJpb3JhdmVuIHwgRHJlYW1zdGltZS5jb20AaAB0AHQAcAA6AC8ALwB3AHcA
        dwAuAGQAcgBlAGEAbQBzAHQAaQBtAGUALgBjAG8AbQAvAHMAdABvAGMAawAtAGkAbQBhAGcAZQBzAC0A
        dgBlAGMAdABvAHIALQBtAGEAZwBuAGkAZgB5AGkAbgBnAC0AZwBsAGEAcwBzAC0AZgBpAGwAZQAtAGUA
        cABzAC0AZgBvAHIAbQBhAHQALQBpAG0AYQBnAGUAMwA2ADMAMwAzADgANwA0AAAA/+IMWElDQ19QUk9G
        SUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNS
        R0IAAAAAAAAAAAAAAAEAAPbWAAEAAAAA0y1IUCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAA
        AgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAA
        AsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAA
        BDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQg
        KGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYt
        Mi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAA
        AABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAA
        ts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3
        dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA
        AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAA
        AAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2
        Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4x
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAA
        AAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNp
        ZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZ
        AF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDw
        APYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5
        AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLL
        AtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQt
        BDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXl
        BfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4
        CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApq
        CoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1A
        DVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+
        EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQn
        FEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhA
        GGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM
        HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHO
        IfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJ
        J3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1B
        LXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4
        M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqy
        Ou87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIw
        QnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3
        Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLH
        UxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvl
        XDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWS
        ZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/R
        cCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6Rnql
        ewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YO
        hnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIR
        knqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6u
        nx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavp
        rFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnC
        uju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9
        yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc
        1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf
        56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK
        +Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMP
        FB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAoACsAwEi
        AAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAAB
        fQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNE
        RUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
        tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEA
        AAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRC
        kaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpz
        dHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A9/ooooAKKKKACiiigAooooAKKKKACiiigAoo
        ooAKKKKACiiigAooooAKKKKACiiigAooooAKKhmmjgheaaRY40UszuwCqBySSeAB614d45+P0dvLLp/h
        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
        UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAf/9k=
</value>
  </data>
</root>